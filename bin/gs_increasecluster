#!/usr/bin/python -B
# coding=UTF-8

import sys
import log
import os
import json
from optparse import OptionParser

import util
util.install_sigint_handler()
(homedir,logdir) = util.get_required_env()

parser = OptionParser(usage="%prog " + util.CLIENT_OPTIONS_USAGE,
                      description=u"Increase the number of the nodes of the GridDB cluster.",
			version="%prog [V3.0.00]")
util.add_client_options(parser)
(options, args) = parser.parse_args()

if options.username is None:
	print u"B10001: Specify a user name and a password."+" (-u USER/PASS)"
	sys.exit(1)

log = log.logger(__file__, log.DEBUG)
log.debug("%s start." % (__file__))
log.debug("options: %s %s" % (options, args))

c = util.is_active_cluster(options, log)
if c is None:
	print u"B10101: Check the status of the node."
	log.debug("%s end." % (__file__))
	sys.exit(1)
elif not c:
	print u"B10102: The GridDB cluster does not start."
	log.debug("%s end." % (__file__))
	sys.exit(3)

(options.server,options.port) = util.get_master_addr(options,log)
if options.server is None:
	print u"B10103: Failed to obtain the address of the master node."
	log.error("B10103: Failed to obtain the address of the master node.")
	log.debug("%s end." % (__file__))
	sys.exit(1)

a_num = util.get_active_num(options, log)
d_num = util.get_designated_num(options, log)
if a_num is None or d_num is None:
	print u"B10104: Check the status of the node."
	log.error("B10104: Check the status of the node.")
	log.debug("%s end." % (__file__))
	sys.exit(1)
if not a_num == d_num:
	# the cluster is not stable
	print u"B10105: The GridDB cluster cannot be increased when the cluster is in an unstable state."
	log.debug("%s end." % (__file__))
	sys.exit(3)
elif d_num == 1:
	# to avoid split-brain
	print u"B10106: The GridDB cluster cannot be increased from single node configuration."
	print u"Stop the GridDB cluster and configure again."
	log.debug("%s end." % (__file__))
	sys.exit(3)

method = "POST"
print u"The number of the nodes of the GridDB cluster is increased."
path = "/cluster/increase"
data = {}
(res, code) = util.request_rest(method, path, data, options, log)

log.debug("%s end." % (__file__))

if code != 200:
	sys.exit(1)
