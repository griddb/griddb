
# warning
config.slf4jVersionNotSuitable = Specified slf4j-api is not suitable version to express full information (minimum={} speified={})
config.slf4jVersionCheckFailed = Failed to check slf4j-api version
config.unexpectedConfigFile = Config file must be specified with "gridstore-conf*.jar" (urlList={})
config.unknownProperty = Unknown properties specified (type={}, nameList={})
config.deprecatedProperty = Deprecated properties specified (type={}, nameList={})

# info
heartbeat.started = Sending heartbeat (statement={}, address={}, partition={}, statementId={}, elapsedMillis={})

connection.retryStarted = Retry started (context={}, statement={}, orgAddress={}, partition={}, statementId={}, trialCount={})
connection.failoverWorking = Failover working (context={}, statement={}, orgAddress={}, partition={}, statementId={}, trialCount={}, trialMillis={}, timeoutMillis={})
connection.retrySucceeded = Retry succeeded (context={}, statement={}, orgAddress={}, newAddress={}, partition={}, statementId={}, trialCount={})
connection.failoverSucceeded = Failover succeeded (context={}, statement={}, orgAddress={}, newAddress={}, partition={}, statementId={}, trialCount={})
connection.statementErrorAfterRetry = Statement error after retry succeess (context={}, statement={}, orgAddress={}, newAddress={}, partition={}, statementId={}, trialCount={})
connection.statementErrorAfterFailover = Statement error after failover succeess (context={}, statement={}, orgAddress={}, newAddress={}, partition={}, statementId={}, trialCount={})

discovery.previousMember = Using previously updated notification member (providerURL={})

transaction.repairingSession = Repairing session (context={}, statement={}, partition={}, statementId={}, containerId={}, sessionId={}, trialCount={}, transactionStarted={})
transaction.sessionRepaired = Session repaired (context={}, statement={}, partition={}, statementId={}, containerId={}, sessionId={}, trialCount={})
transaction.repairingMultiSession = Repairing multiple sessions (context={}, statement={}, trialCount={})
transaction.regeneratingMultiSession = Repairing multiple sessions (context={}, statement={}, trialCount={}, localTrialCount={})
transaction.multiSessionRepaired = Multiple sessions repaired (context={}, statement={}, trialCount={}, localTrialCount={})
transaction.repairingMultiOperation = Repairing multiple operations (context={}, statement={}, trialCount={}, incompletionCount={})

# debug
config.loaded = Config file loaded (url={})
config.loadFailed = Failed to load config file
config.notLoaded = Config file is not loaded because of neither config file nor "gridstore-conf*.jar" specified

discovery.updatingMaster = Updating master (notificationAddress={}, timeoutMillis={})
discovery.masterUpdated = Master updated (notificationAddress={}, masterAddress={}, containerHashMode={}, partitionCount={})
discovery.invalidatingMaster = Invalidating master (notificationAddress={}, masterAddress={}, containerHashMode={}, partitionCount={}, hasConnection={})
discovery.checkingMaster = Checking master (masterAddress={}, connectingAddress={})
discovery.masterFound = Master found (masterAddress={}, connectedAddress={}, containerHashMode={}, partitionCount={})
discovery.updatingMember = Updating notification member (providerURL={}, currentAvailable={})
discovery.memberUpdated = Notification member updated (providerURL={}, changed={}, member={})

transaction.transactionStarted = Transaction started (context={}, partition={}, containerId={}, sessionId={})
transaction.transactionEnded = Transaction ended (context={}, partition={}, containerId={}, sessionId={})
transaction.sessionIdGenerated = Session ID genereated (context={}, partition={}, containerId={}, sessionId={})
transaction.sessionStarted = Session started (context={}, partition={}, containerId={}, sessionId={})
transaction.sessionClosed = Session ended (context={}, partition={}, containerId={}, sessionId={})

statementIO.started = Sending statement message (statement={}, address={}, partition={}, statementId={})

statementExec.started = Statement started (localContext={}, statement={}, statementId={}, partition={}, sessionId={})
statementExec.startedWithContainer = Statement started (localContext={}, statement={}, statementId={}, partition={}, sessionId={}, container={})
statementExec.startedWithQuery = Statement started (localContext={}, statement={}, statementId={}, partition={}, sessionId={}, container={}, query={})
statementExec.ended = Statement ended (localContext={}, statement={}, statementId={}, partition={}, sessionId={}, ioMillis={}, otherMillis={})
statementExec.endedWithContainer = Statement ended (localContext={}, statement={}, statementId={}, partition={}, sessionId={}, container={}, ioMillis={}, otherMillis={})
statementExec.endedWithQuery = Statement ended (localContext={}, statement={}, statementId={}, partition={}, sessionId={}, container={}, query={}, ioMillis={}, otherMillis={})
